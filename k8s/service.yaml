apiVersion: v1
kind: Service
metadata:
  name: ai-fundamentals
  namespace: ai-fundamentals
  labels:
    app.kubernetes.io/name: ai-fundamentals
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: ai-fundamentals-platform
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: "/actuator/health"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: "30"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-timeout: "10"
    service.beta.kubernetes.io/aws-load-balancer-healthy-threshold: "2"
    service.beta.kubernetes.io/aws-load-balancer-unhealthy-threshold: "3"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: management
    port: 8080
    targetPort: management
    protocol: TCP
  selector:
    app.kubernetes.io/name: ai-fundamentals
    app.kubernetes.io/component: application
  sessionAffinity: None

---
apiVersion: v1
kind: Service
metadata:
  name: ai-fundamentals-headless
  namespace: ai-fundamentals
  labels:
    app.kubernetes.io/name: ai-fundamentals
    app.kubernetes.io/component: headless-service
    app.kubernetes.io/part-of: ai-fundamentals-platform
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: http
    port: 8080
    targetPort: http
    protocol: TCP
  selector:
    app.kubernetes.io/name: ai-fundamentals
    app.kubernetes.io/component: application

---
# LoadBalancer service for external access (optional)
apiVersion: v1
kind: Service
metadata:
  name: ai-fundamentals-lb
  namespace: ai-fundamentals
  labels:
    app.kubernetes.io/name: ai-fundamentals
    app.kubernetes.io/component: loadbalancer
    app.kubernetes.io/part-of: ai-fundamentals-platform
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: "/actuator/health"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: "30"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-timeout: "10"
    service.beta.kubernetes.io/aws-load-balancer-healthy-threshold: "2"
    service.beta.kubernetes.io/aws-load-balancer-unhealthy-threshold: "3"
    service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "60"
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: https
    port: 443
    targetPort: http
    protocol: TCP
  selector:
    app.kubernetes.io/name: ai-fundamentals
    app.kubernetes.io/component: application
  loadBalancerSourceRanges:
  - 0.0.0.0/0  # Restrict this in production